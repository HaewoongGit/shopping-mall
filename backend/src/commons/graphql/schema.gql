# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  userId: String!
  email: String!
  userName: String!
  age: Int
}

type ProductCategory {
  productCategoryId: String!
  categoryName: String!
}

type ProductTag {
  productTagId: String!
  products: [Product!]!
  tagName: String!
}

type Product {
  productId: String!
  productName: String!
  description: String!
  price: Int!
  isSoldOut: Boolean!
  hits: Int!
  user: User!
  productCategory: ProductCategory!
  productTags: [ProductTag!]!
}

type Dibs {
  user: User!
  product: Product!
}

type LoginResponse {
  token: String!
  userId: String!
}

type Review {
  user: User!
  product: Product!
  reviewContent: String!
  grade: Int!
}

type Payment {
  paymentId: String!
  impUid: String!
  merchantUid: String!
  amount: Int!
  deliveryAddress: String!
  contactNumber: String!
  orderInformation: String!
  status: POINT_TRANSACTION_STATUS_ENUM!
  user: User!
  createdAt: DateTime!
  deletedAt: DateTime
}

enum POINT_TRANSACTION_STATUS_ENUM {
  PAYMENT
  CANCEL
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Cart {
  user: User!
  product: Product!
  quantity: Int!
}

type OrderList {
  orderListId: String!
  product: Product!
  user: User!
  payment: Payment!
  orderQuantity: Int!
  deliveryAddress: String!
  contactNumber: String!
  price: Int!
  createdAt: DateTime!
  deletedAt: DateTime
}

type Query {
  fetchUser: String!
  fetchLoginUser: User!
  findUser(email: String!): User!
  fetchDibs(findOneDibsInput: FindOneDibsInput!): Dibs!
  fetchDibses(findDibsInput: FindDibsInput!): [Dibs!]!
  fetchProduct(productId: String!): Product!
  fetchProducts(findProductsInput: FindProductsInput!): [Product!]!
  fetchProductTag(productTagId: String!): ProductTag!
  fetchProductTags: [ProductTag!]!
  fetchReview(findOneReviewInput: FindOneReviewInput!): Review!
  fetchReviews(findReviewInput: FindReviewInput!): [Review!]!
  fetchPayments: [Payment!]!
  fetchCart(findOneCartInput: FindOneCartInput!): Cart!
  fetchCarts(productId: String): [Cart!]!
  fetchOrderList: [OrderList!]!
}

input FindOneDibsInput {
  productId: String!
  userId: String!
}

input FindDibsInput {
  productId: String
  userId: String
}

input FindProductsInput {
  userId: String
  categoryName: String
}

input FindOneReviewInput {
  productId: String!
  userId: String!
}

input FindReviewInput {
  productId: String
  userId: String
}

input FindOneCartInput {
  productId: String!
  userId: String!
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  updateUserPwd(updateUserPwdInput: UpdateUserPwdInput!): User!
  deleteLoginUser: Boolean!
  createDibs(createDibsInput: CreateDibsInput!): Dibs!
  deleteDibs(deleteDibsInput: DeleteDibsInput!): Boolean!
  createProduct(createProductInput: CreateProductInput!): Product!
  updateProduct(productId: String!, updateProductInput: UpdateProductInput!): Product!
  increaseHits(productId: String!): Product!
  deleteProduct(productId: String!): Boolean!
  updateProductTag(productTagId: String!): ProductTag!
  deleteProductTag(productTagId: String!): Boolean!
  createProductCategory(categoryName: String!): ProductCategory!
  updateProductCategory(productCategoryId: String!, categoryName: String!): ProductCategory!
  login(email: String!, password: String!): LoginResponse!
  restoreAcessToken: String!
  createReview(createReviewInput: CreateReviewInput!): Review!
  updateReview(updateReviewInput: UpdateReviewInput!): Review!
  deleteReview(deleteReviewInput: DeleteReviewInput!): Boolean!
  createPayment(createPaymentInput: CreatePaymentInput!): Payment!
  deletePayment(merchantUid: String!): Boolean!
  createCart(createCartInput: CreateCartInput!): Cart!
  updateCart(updateCartInput: UpdateCartInput!): Cart!
  deleteCart(productId: String!): Boolean!
}

input CreateUserInput {
  email: String!
  password: String!
  userName: String!
  age: Int!
}

input UpdateUserPwdInput {
  email: String!
  password: String!
}

input CreateDibsInput {
  productId: String!
  userId: String!
}

input DeleteDibsInput {
  productId: String!
  userId: String!
}

input CreateProductInput {
  productName: String!
  description: String
  price: Int!
  email: String!
  categoryName: String!
  productTags: [String!]
}

input UpdateProductInput {
  productName: String
  description: String
  price: Int
  categoryName: String
  productTags: [String!]
  isSoldOut: Boolean
}

input CreateReviewInput {
  productId: String!
  userId: String!
  reviewContent: String!
  grade: Int!
}

input UpdateReviewInput {
  productId: String!
  userId: String!
  reviewContent: String!
  grade: Int!
}

input DeleteReviewInput {
  productId: String!
  userId: String!
}

input CreatePaymentInput {
  waitingListForPurchase: [PurchaseItem!]!
  impUid: String!
  merchantUid: String!
  amount: Int!
  deliveryAddress: String!
  contactNumber: String!
  orderInformation: String!
}

input PurchaseItem {
  productId: String!
  productName: String!
  quantity: Int!
  price: Int!
  isCart: Boolean
}

input CreateCartInput {
  productId: String!
  quantity: Int!
}

input UpdateCartInput {
  productId: String!
  quantity: Int!
}